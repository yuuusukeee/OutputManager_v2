<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.outputmanager.mapper.OutputMapper">

  <!-- 一覧（全件） -->
  <select id="selectAll" resultType="com.example.outputmanager.domain.Output">
    SELECT id, user_id, category_id, title, summary, detail, icon, video_url, created_at, updated_at
    FROM outputs
    ORDER BY created_at DESC
  </select>

  <!-- 主キー検索（従来版：int）※既存互換で残す -->
  <select id="selectById" parameterType="int" resultType="com.example.outputmanager.domain.Output">
    SELECT id, user_id, category_id, title, summary, detail, icon, video_url, created_at, updated_at
    FROM outputs
    WHERE id = #{id}
  </select>

  <!-- ★ 新規：主キー検索（Long統一） -->
  <select id="findById" parameterType="long" resultType="com.example.outputmanager.domain.Output">
    SELECT id, user_id, category_id, title, summary, detail, icon, video_url, created_at, updated_at
    FROM outputs
    WHERE id = #{id}
  </select>

  <!-- 自分の一覧 -->
  <select id="selectByUserId" parameterType="int" resultType="com.example.outputmanager.domain.Output">
    SELECT id, user_id, category_id, title, summary, detail, icon, video_url, created_at, updated_at
    FROM outputs
    WHERE user_id = #{userId}
    ORDER BY created_at DESC
  </select>

  <!-- 検索（自分のデータに限定） -->
  <select id="search" resultType="com.example.outputmanager.domain.Output">
    SELECT id, user_id, category_id, title, summary, detail, icon, video_url, created_at, updated_at
    FROM outputs
    WHERE user_id = #{userId}
      AND (
            #{keyword} IS NULL
         OR title   LIKE CONCAT('%', #{keyword}, '%')
         OR detail  LIKE CONCAT('%', #{keyword}, '%')
         OR summary LIKE CONCAT('%', #{keyword}, '%')
          )
      AND (#{categoryId} IS NULL OR category_id = #{categoryId})
    ORDER BY created_at DESC
  </select>

  <!-- INSERT（主キー採番をJavaのentity.idへ） -->
  <insert id="insert"
          parameterType="com.example.outputmanager.domain.Output"
          useGeneratedKeys="true" keyProperty="id">
    INSERT INTO outputs
      (user_id, category_id, title, summary, detail, icon, video_url, created_at, updated_at)
    VALUES
      (#{userId}, #{categoryId}, #{title}, #{summary}, #{detail}, #{icon}, #{videoUrl}, NOW(), NOW())
  </insert>

  <!-- UPDATE（本人データのみ） -->
  <update id="update" parameterType="com.example.outputmanager.domain.Output">
    UPDATE outputs
    SET title       = #{title},
        summary     = #{summary},
        detail      = #{detail},
        category_id = #{categoryId},
        icon        = #{icon},
        video_url   = #{videoUrl},
        updated_at  = NOW()
    WHERE id = #{id}
      AND user_id = #{userId}
  </update>

  <!-- DELETE -->
  <delete id="delete" parameterType="int">
    DELETE FROM outputs WHERE id = #{id}
  </delete>

  <!-- カテゴリ使用数（カテゴリ削除のガード用） -->
  <select id="countByCategoryId" parameterType="int" resultType="int">
    SELECT COUNT(*) FROM outputs WHERE category_id = #{categoryId}
  </select>

  <!-- 任意：IDリストでまとめて取得 -->
  <select id="selectByIds" resultType="com.example.outputmanager.domain.Output">
    SELECT id, user_id, category_id, title, summary, detail, icon, video_url, created_at, updated_at
    FROM outputs
    WHERE id IN
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>

  <!-- ユーザー×カテゴリ名で取得（お気に入りを除外） -->
  <!-- 既存は param1/param2 だったが、@Param 名に合わせて置き換え -->
  <select id="selectByUserAndCategoryNameExcludeFav"
          resultType="com.example.outputmanager.domain.Output">
    SELECT
      o.id, o.user_id, o.category_id, o.title, o.summary, o.detail, o.icon, o.video_url,
      o.created_at, o.updated_at
    FROM outputs o
    JOIN categories c ON c.id = o.category_id
    WHERE o.user_id = #{userId}
      AND c.name = #{categoryName}
      AND NOT EXISTS (
        SELECT 1
        FROM favorites f
        WHERE f.user_id = o.user_id
          AND f.output_id = o.id
      )
    ORDER BY o.created_at DESC
  </select>

</mapper>